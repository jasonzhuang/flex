<?xml version="1.0"?>
<!-- lsos/WelcomeMessage.mxml -->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
    width="100%" height="100%"
    initialize="initApp()">
    <mx:Script>
        <![CDATA[
            import vo.DateRange;
            import vo.Employee;
            import valueObject.ShareObjectHandler;
            import mx.collections.ArrayCollection
            import flash.net.SharedObject;

            //ShareObject can store simple data like String, Date, Array
            //you can use flash.net.registerClassAlias() to store customer class
            [Bindable]
            private var context:String;

            public var filter:ShareObjectHandler;

            public var empty:SharedObject;

            private function initApp():void {
                empty = SharedObject.getLocal("empty");
                var aaa:String = getEmpty();
                var bbb:Boolean = empty.data.bbb as Boolean;//as Boolean is OK, but as null will throw error
                filter = new ShareObjectHandler("favorite");
                context = "";
                if(filter.data.name) {
                    context += filter.data.name + "\n";
                }
                if(filter.data.food1) {
                    context += filter.data.food1 + "\n";
                }
                if(filter.data.food2) {
                    context += filter.data.food2 + "\n";
                }

//                if (filter.data.employee) {
//                    var keys:Array = [];
//                    var em:Object = filter.data.employee;
//                    for(var key:* in em) {
//                        if(!em.hasOwnProperty(key)) {
//                            continue;
//                        }
//                        keys.push(key);
//                    }
////                    var descriptor:XML = describeType(filter.data.employee)
////                    context += filter.data.employee["firstName"] + "," + 
////                            filter.data.employee["lastName"]; /* + "," +
////                            filter.data.employee["age"];
////                    var e:Employee = Employee(filter.data.employee); //error
//                    context += em[keys[0]] + "\n" + em[keys[1]];
//                }

                //also can use ArrayCollection
                //the type of filter.data.employees is Array
                 if (filter.data.employees) {
//                    context += (filter.data.employee)["firstName"] + "\n" +
//                            (filter.data.employee)["lastName"];
                 }

                 // filter.data.date represent dateRange, and the type is Object, but in the Object, 
                 // the startDate and endDate property type is Date
                 if (filter.data.date) {
                     trace(filter.data.date);
                 }
            }

            //the first time , since there's no "aaa" in shareObject, will return null, but "null as String" has no error
            private function getEmpty():String {
                return empty.data.aaa as String;
            }

            private function storeData():void {
                var e:Employee = new Employee();
                var items:Array = [];
//                var arrayCollection:ArrayCollection = new ArrayCollection(items);
                e.firstName = "Zhuang";
                e.lastName = "Yougen";
                items[0] = e;

                var beginDate:Date = new Date("Jan 11 2010");
                var endDate:Date = new Date("Feb 12 2010");

                var dateRange:DateRange = new DateRange(beginDate, endDate);

                this.filter.clear();
                filter.data.employees = items;
                filter.data.date = dateRange;

                if(this.yourName.text) {
                    this.filter.data.name = this.yourName.text;
                }
                if(this.milkCB.selected) {
                    this.filter.data.food1 = "Milk";
                }
                if(this.eggsCB.selected) {
                    this.filter.data.food2 = "Egg";
                }
                this.filter.flush();
            }


            private function deleteData():void {
                this.filter.clear();
            }
    ]]>
    </mx:Script>
    <mx:HBox id="Demo">
        <mx:Panel id="choose" title="CheckBox Control Example" 
            height="100%" width="100%" layout="horizontal"
            paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">

            <mx:VBox>
                <mx:FormItem label="Name:">
                    <mx:TextInput id="yourName"/>
                </mx:FormItem>
                <mx:CheckBox id="milkCB" label="milk"/>
                <mx:CheckBox id="eggsCB" label="eggs"/>
            </mx:VBox>

        </mx:Panel>

        <mx:TextArea id="faverator" text="{context}" width="100%" height="100%"/>
    </mx:HBox>

    <mx:HBox id="action">
        <mx:Button id="store" label="Save My Choice" click="storeData()"/>
        <mx:Button id="clear" label="Delete My Choice" click="deleteData()"/>
    </mx:HBox>
</mx:Application>
