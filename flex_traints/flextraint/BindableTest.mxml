<?xml version="1.0"?>
<!-- binding/ASFunction.mxml -->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script>
        <![CDATA[
            import flash.events.Event;
            /**
            * The curly braces {} syntax and the <mx:Binding> tag both define a data binding at compile time
            * BindingUtils at run time.
            */
            public static const SSS:String = "myFlagChanged";
            /**Define a function that gets invoked 
            // in response to the myFlagChanged event.
            //myFlagChanged被dispatch后，text检查是否有变化，并去调用isEnabled()
            //若没有在某处去调用isEnable(),也不会起作用
            //[Bindable(event=SSS)] 不能正常工作，因为Bindable是编译前进行的
            */
            [Bindable(event="myFlagChanged")]
            private function isEnabled():String {
                if (myFlag)
                    return "hahahah";
                else
                    return "wwwwww";
            }

            private var _myFlag:Boolean = false;

            // Define a setter method that dispatches the 
            // myFlagChanged event to trigger the data binding.
            public function set myFlag(value:Boolean):void {
                _myFlag = value;
                dispatchEvent(new Event("myFlagChanged"));
            }

            public function get myFlag():Boolean {
                return _myFlag;
            }
        ]]>
    </mx:Script>

    <!-- Use the function as the source of a data binding expression. -->
    <mx:TextArea id="myTA" text="{isEnabled()}"/>

    <!-- Modify the property, causing the setter method to 
        dispatch the myFlagChanged event to trigger data binding. -->
    <mx:Button label="Clear MyFlag" click="myFlag=false;"/>
    <mx:Button label="Set MyFlag" click="myFlag=true;"/>
</mx:Application>

