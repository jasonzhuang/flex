<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>uiImpersonation::UIImpersonator</title>
<link href="../../../../../css/ea.css" rel="stylesheet" type="text/css" />
<script>
function initPage(src) {
	if(parent==this&&(this.location+"").indexOf('EARoot')!=-1)
		document.location=(this.location+"").substring(0,(this.location+"").indexOf('EARoot'))+"index"+(this.location+"").substring((this.location+"").lastIndexOf('.'))+"?goto="+((this.location+"").substring((this.location+"").indexOf('EARoot')+7,(this.location+"").lastIndexOf('.')).replace(/\//g,':').replace(/EA/g,""));
	else
		parent.initPage(src);
}
</script>
</head>
<body onload="initPage(this);" class="Content">
<div class="pageHeader"></div>
<div class="PageBody">
	<span class="ObjectTitle">UIImpersonator  : public   class</span>
	<table border="0" cellpadding="0" cellspacing="0" class="ObjectDetails">
		<tr>
			<td width="15%" class="ObjectDetailsTopic">Created:</td>
			<td width="85%" class="ObjectDetailsValue">5/11/2009 4:27:40 PM</td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic">Modified:</td>
			<td class="ObjectDetailsValue">5/11/2009 4:27:40 PM</td>
		</tr>
		<tr style="height: 10px"><td colspan="2"></td></tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../../images/plus03.gif" align="absmiddle" id="proj" onclick="parent.toggleData(this.id)" />Project:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Author:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Version:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj02" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Phase:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj03" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Status:</td>
			<td class="ObjectDetailsValue">Proposed</td>
		</tr>
		<tr id="proj04" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Complexity:</td>
			<td class="ObjectDetailsValue">Easy</td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../../images/plus03.gif" align="absmiddle" id="adv" onclick="parent.toggleData(this.id)" />Advanced:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="adv00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">UUID:</td>
			<td class="ObjectDetailsValue">{55D9B733-C42C-4ac5-A082-90BAC7904DAC}</td>
		</tr>
		<tr id="adv01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Appears In:</td>
			<td class="ObjectDetailsValue"><a href="EA267.htm">uiImpersonation</a></td>
		</tr>
	</table>
	
	<div class="TableGroup" id="TableGroup">
		<ul class="ItemTitle">
			<li onClick="parent.toggleItem('Operations');" id="OperationsTitle">Operations</li>
			<li onClick="parent.toggleItem('Links');" id="LinksTitle">Other Links</li>
		</ul>
<div class="ItemBody" id="OperationsTable">
	<table border="0" cellspacing="0" cellpadding="0" class="Table">
		<tr>
			<td width="40%" class="TableHeading">Operation</td>
			<td width="60%" class="TableHeading">Details</td>
		</tr>
						<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>addChild</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}" border="0" />child: DisplayObject</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{2D62BEB0-1872-48d8-B2EE-32A98385C29C}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The DisplayObject to add as a child of the TestEnvironment. It must implement the IUIComponent interface.</div>
</td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Adds a child DisplayObject to the TestEnvironment. The child is added after other existing children, so that the first child added has index 0, the next has index 1, an so on. &lt;br /&gt;&lt;p&gt;&lt;b&gt;Note: &lt;/b&gt;While the &lt;code&gt;child&lt;/code&gt; argument to the method is specified as of type DisplayObject, the argument must implement the IUIComponent interface to be added as a child of a container. All Flex components implement this interface.&lt;/p&gt; &lt;br /&gt;@return The added child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of the added component. &lt;br /&gt;@see mx.core.Container &lt;br /&gt;@tiptext Adds a child object to this container.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>addChildAt</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{8778385D-F2E5-4e61-9030-01D65B3661B1}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{8778385D-F2E5-4e61-9030-01D65B3661B1}" border="0" />child: DisplayObject</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{8778385D-F2E5-4e61-9030-01D65B3661B1}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{8778385D-F2E5-4e61-9030-01D65B3661B1}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{8778385D-F2E5-4e61-9030-01D65B3661B1}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{8778385D-F2E5-4e61-9030-01D65B3661B1}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The DisplayObject to add as a child of the TestEnvironment. It must implement the IUIComponent interface.</div>
</td>
						</tr>
					</table>
					<a href="#" onclick="parent.toggleData('param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}" border="0" />index: int</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{BFE9229E-6A23-474b-9C6C-301F98ED2B67}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The index to add the child at.</div>
</td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Adds a child DisplayObject to the TestEnvironment. The child is added at the index specified. &lt;br /&gt;&lt;p&gt;&lt;b&gt;Note: &lt;/b&gt;While the &lt;code&gt;child&lt;/code&gt; argument to the method is specified as of type DisplayObject, the argument must implement the IUIComponent interface to be added as a child of TestEnvironment. All Flex components implement this interface.&lt;/p&gt; &lt;br /&gt;@return The added child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of the added component. &lt;br /&gt;@see mx.core.Container
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>removeChild</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}" border="0" />child: DisplayObject</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{CB23D441-2681-4ba8-8E70-EC5D3EFEFB37}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The DisplayObject to remove.</div>
</td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Removes a child DisplayObject from the child list of the TestEnviroment. The removed child will have its &lt;code&gt;parent&lt;/code&gt; property set to null. The child will still exist unless explicitly destroyed. If you add it to another container, it will retain its last known state. &lt;br /&gt;@return The removed child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of the removed component.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>removeChildAt</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{0D5329F4-09F4-449f-8085-9CF769F811B5}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{0D5329F4-09F4-449f-8085-9CF769F811B5}" border="0" />index: int</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{0D5329F4-09F4-449f-8085-9CF769F811B5}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{0D5329F4-09F4-449f-8085-9CF769F811B5}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{0D5329F4-09F4-449f-8085-9CF769F811B5}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{0D5329F4-09F4-449f-8085-9CF769F811B5}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The child index of the DisplayObject to remove.</div>
</td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Removes a child DisplayObject from the child list of the TestEnvironment at the specified index. The removed child will have its &lt;code&gt;parent&lt;/code&gt; property set to null. The child will still exist unless explicitly destroyed. If you add it to another container, it will retain its last known state. &lt;br /&gt;@return The removed child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of the removed component.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>removeAllChildren</strong>():void
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Removes all children from the child list of this container.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>getChildAt</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{A0D110BD-7230-46cd-A91A-705AE7EF1398}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{A0D110BD-7230-46cd-A91A-705AE7EF1398}" border="0" />index: int</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{A0D110BD-7230-46cd-A91A-705AE7EF1398}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{A0D110BD-7230-46cd-A91A-705AE7EF1398}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{A0D110BD-7230-46cd-A91A-705AE7EF1398}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{A0D110BD-7230-46cd-A91A-705AE7EF1398}03" style="display: none;">
							<td width="50"></td>
							<td></td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Gets the &lt;i&gt;n&lt;/i&gt;th child component object. &lt;br /&gt;&lt;p&gt;The children returned from this method include children that are declared in MXML and children that are added using the&lt;br /&gt;&lt;code&gt;addChild()&lt;/code&gt; or &lt;code&gt;addChildAt()&lt;/code&gt; method.&lt;/p&gt; &lt;br /&gt;@param childIndex Number from 0 to (numChildren - 1). &lt;br /&gt;@return Reference to the child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of a specific Flex control, such as ComboBox or TextArea.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>getChildByName</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{23268543-7787-486b-8BD0-6D0BA6D644F6}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{23268543-7787-486b-8BD0-6D0BA6D644F6}" border="0" />name: String</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{23268543-7787-486b-8BD0-6D0BA6D644F6}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{23268543-7787-486b-8BD0-6D0BA6D644F6}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{23268543-7787-486b-8BD0-6D0BA6D644F6}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{23268543-7787-486b-8BD0-6D0BA6D644F6}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">The identifier of the child.</div>
</td>
						</tr>
					</table>
):DisplayObject
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Returns the child whose &lt;code&gt;name&lt;/code&gt; property is the specified String. &lt;br /&gt;@return The DisplayObject representing the child as an object of type DisplayObject. You typically cast the return value to UIComponent, or to the type of a specific Flex control, such as ComboBox or TextArea.
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>getChildIndex</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{B2FBBA37-E1D7-4362-88A8-AC9617653356}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{B2FBBA37-E1D7-4362-88A8-AC9617653356}" border="0" />child: DisplayObject</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{B2FBBA37-E1D7-4362-88A8-AC9617653356}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{B2FBBA37-E1D7-4362-88A8-AC9617653356}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{B2FBBA37-E1D7-4362-88A8-AC9617653356}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{B2FBBA37-E1D7-4362-88A8-AC9617653356}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">Reference to child whose index to get.</div>
</td>
						</tr>
					</table>
):int
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Gets the zero-based index of a specific child. &lt;br /&gt;&lt;p&gt;The first child of the Test Environment (i.e.: the first child tag that appears in the MXML declaration) has an index of 0, the second child has an index of 1, and so on. The indexes of the test environemnt children determine the order in which they get laid out. For example, in a VBox the child with index 0 is at the top, the child with index 1 is below it, etc.&lt;/p&gt; &lt;br /&gt;&lt;p&gt;If you add a child by calling the &lt;code&gt;addChild()&lt;/code&gt; method, the new child&#39;s index is equal to the largest index among existing children plus one. You can insert a child at a specified index by using the&lt;br /&gt;&lt;code&gt;addChildAt()&lt;/code&gt; method; in that case the indices of the child previously at that index, and the children at higher indices, all have their index increased by 1 so that all indices fall in the range from 0 to &lt;code&gt;(numChildren - 1)&lt;/code&gt;.&lt;/p&gt; &lt;br /&gt;&lt;p&gt;If you remove a child by calling &lt;code&gt;removeChild()&lt;/code&gt; or &lt;code&gt;removeChildAt()&lt;/code&gt; method, then the indices of the remaining children are adjusted so that all indices fall in the range from 0 to &lt;code&gt;(numChildren - 1)&lt;/code&gt;.&lt;/p&gt; &lt;br /&gt;&lt;p&gt;If &lt;code&gt;myView.getChildIndex(myChild)&lt;/code&gt; returns 5, then &lt;code&gt;myView.getChildAt(5)&lt;/code&gt; returns myChild.&lt;/p&gt; &lt;br /&gt;&lt;p&gt;The index of a child may be changed by calling the&lt;br /&gt;&lt;code&gt;setChildIndex()&lt;/code&gt; method.&lt;/p&gt; &lt;br /&gt;@return Number between 0 and (numChildren - 1).
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>setChildIndex</strong>(<br />
					<a href="#" onclick="parent.toggleData('param{206B7B1D-7291-42fd-BF27-23F374F545D0}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{206B7B1D-7291-42fd-BF27-23F374F545D0}" border="0" />child: DisplayObject</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{206B7B1D-7291-42fd-BF27-23F374F545D0}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{206B7B1D-7291-42fd-BF27-23F374F545D0}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{206B7B1D-7291-42fd-BF27-23F374F545D0}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{206B7B1D-7291-42fd-BF27-23F374F545D0}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">Reference to child whose index to set.</div>
</td>
						</tr>
					</table>
					<a href="#" onclick="parent.toggleData('param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}')" style="text-decoration: none; color: #000000;"><img src="../../../../../images/plus03.gif" align="absmiddle" id="param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}" border="0" />newIndex: int</a>, 
					<table border="0" cellspacing="0" cellpadding="0" class="Table" style="padding: 4px 18px;">
						<tr id="param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}00" style="display: none;">
							<td width="50"><strong>Default:</strong></td>
							<td></td>
						</tr>
						<tr id="param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}01" style="display: none;">
							<td width="50"><strong>Kind:</strong></td>
							<td>in</td>
						</tr>
						<tr id="param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}02" style="display: none;">
							<td width="50"><strong>Stereotype: </strong></td>
							<td></td>
						</tr>
						<tr id="param{234D5D07-D2CA-4df5-A0BC-4F4E6C714D1E}03" style="display: none;">
							<td width="50"></td>
							<td><div class="ObjectDetailsNotes">Number that indicates the new index. Must be an integer between 0 and (numChildren - 1).</div>
</td>
						</tr>
					</table>
):void
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential  </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Sets the index of a particular child. See the &lt;code&gt;getChildIndex()&lt;/code&gt; method for a description of the child&#39;s index. 
		</td>
	</tr>
</table></div>

				</td>
			</tr>
			<tr>
				<td width="40%" class="TableRow">
					<i>public static</i><br />
					<strong>numChildren</strong>():int
				</td>
				<td width="60%" class="TableRow">
					<i>Sequential &lt;&lt;property get&gt;&gt; </i>
					<table>
						<tr>
							<td valign = "top"><i></i><span style="margin-left: .7cm;"> </span></td>
							<td></td>
						</tr>
					</table>
					<div class="ObjectDetailsNotes"><table>
	<tr>
		<td valign="top">
			<i>Notes: </i><span style="margin-left: .4cm;"> </span>
		</td>
		<td>
			Number of child components in the TestEnvironment. &lt;br /&gt;&lt;p&gt;The number of children is initially equal to the number of children declared in MXML. At runtime, new children may be added by calling&lt;br /&gt;&lt;code&gt;addChild()&lt;/code&gt; or &lt;code&gt;addChildAt()&lt;/code&gt;, and existing children may be removed by calling&lt;br /&gt;&lt;code&gt;removeChild()&lt;/code&gt;, &lt;code&gt;removeChildAt()&lt;/code&gt;, or &lt;code&gt;removeAllChildren()&lt;/code&gt;.&lt;/p&gt;
		</td>
	</tr>
</table></div>

				</td>
			</tr>

		</table>
</div>		<div class="ItemBody" id="LinksTable">
			<table align="center" border="0" cellspacing="0" cellpadding="0" class="Table">
				<tr>
					<td width="30%" class="TableHeading">Object</td>
					<td width="15%" class="TableHeading">Type</td>
					<td width="15%" class="TableHeading">Connection</td>
					<td width="40%" class="TableHeading">Notes</td>
				</tr>
				<tr>
					<td width="30%" class="TableRow" valign="top"><a href="../../EA1/EA31.htm">Assert</a></td>
					<td width="15%" class="TableRow" valign="top">Class</td>
					<td width="15%" class="TableRow" valign="top">Generalization</td>
					<td width="40%" class="TableRow" valign="top">&nbsp;</td>
				</tr>

			</table>
		</div>
	</div>
<div class="pageFooter"></div>
 
</body>
</html>